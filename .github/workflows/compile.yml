# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Compile Web Page

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest

    permissions:
      # Give the default GITHUB_TOKEN write permission to commit and push the changed files back to the repository.
      contents: write
      id-token: write

    steps:
      - name: setup env
        shell: bash
        run: |
          echo "GOPATH=${{ github.workspace }}/go" >> $GITHUB_ENV
          echo "${{ github.workspace }}/go/bin" >> $GITHUB_PATH

      - uses: actions/checkout@v3

      - name: Copy env file
        run: echo "${{ secrets.GANACHE_TEST_ENV }}" >> .env

      - uses: subosito/flutter-action@v2
        with:
          channel: "stable" # or: 'beta', 'dev' or 'master'
      - run: flutter --version

      - name: Install dependencies
        run: flutter pub get

      # - name: Run tests
      #   run: flutter test

      - name: Build web
        run: flutter build web --web-renderer canvaskit

      - name: Setup Pages
        uses: actions/configure-pages@v3
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          # Upload entire repository
          path: "./build/web"
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2

      - name: Commit changes
        run: |
          git config --local user.email "bot@citizenwallet.xyz"
          git config --local user.name "citizenwallet-bot"

      - uses: phish108/autotag-action@v1.1.55
        id: tagger
        with:
          github-token: ${{ secrets.GITHUB_TOKEN}}
          with-v: "true"
          dry-run: "true"

      - uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "[action] compile contracts"
          commit_user_name: citizenwallet-bot
          commit_user_email: bot@citizenwallet.xyz
          tagging_message: "v${{ steps.tagger.outputs.new-tag }}"
